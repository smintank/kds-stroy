from django.contrib.auth import get_user_model
from django.core.validators import MaxValueValidator, MinValueValidator
from django.db import models
from django.utils.translation import gettext_lazy as _

from locations.models import City
from orders.utils import get_unique_uid, get_upload_path

User = get_user_model()


class Order(models.Model):
    class Status(models.TextChoices):
        REGISTERED = "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω", _("üü• –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
        PROCESSED = "–í —Ä–∞–±–æ—Ç–µ", _("üü® –í —Ä–∞–±–æ—Ç–µ")
        COMPLETED = "–ó–∞–≤–µ—Ä—à–µ–Ω", _("üü© –ó–∞–≤–µ—Ä—à–µ–Ω")
        CANCELED = "–û—Ç–º–µ–Ω–µ–Ω", _("‚¨õÔ∏è –û—Ç–º–µ–Ω–µ–Ω")

    order_id = models.IntegerField("–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞")
    first_name = models.CharField("–ò–º—è", max_length=150)
    phone_number = models.CharField("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", max_length=18)
    comment = models.TextField("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", blank=True, null=True)
    created_at = models.DateTimeField(verbose_name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è",
                                      auto_now_add=True)
    status = models.CharField(
        "–°—Ç–∞—Ç—É—Å", choices=Status.choices, default=Status.REGISTERED,
        max_length=20
    )
    user = models.ForeignKey(
        User,
        on_delete=models.SET_NULL,
        verbose_name="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        blank=True,
        null=True,
    )
    cost = models.FloatField(
        "–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ —Ä—É–±.",
        default=0.0,
        validators=[
            MinValueValidator(0.0),
            MaxValueValidator(10000000.0)
        ]
    )
    final_cost = models.FloatField(
        "–ò—Ç–æ–≥ –≤ —Ä—É–±.",
        default=0.0,
        validators=[
            MinValueValidator(0.0),
            MaxValueValidator(10000000.0)
        ]
    )
    discount = models.IntegerField(
        "–°–∫–∏–¥–∫–∞ –≤ %",
        default=0,
        validators=[
            MinValueValidator(0),
            MaxValueValidator(100)
        ]
    )

    address = models.TextField(verbose_name="–ê–¥—Ä–µ—Å", blank=True, null=True)
    city = models.ForeignKey(
        City, on_delete=models.SET_NULL, verbose_name="–ù–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç",
        blank=True, null=True
    )

    def __str__(self):
        return f"–ó–∞–∫–∞–∑ ‚Ññ{self.order_id}"

    def save(self, *args, **kwargs):
        if not self.order_id:
            self.order_id = get_unique_uid(Order)
        self.final_cost = round(self.cost - self.cost / 100 * self.discount, 2)
        super().save(*args, **kwargs)

    class Meta:
        verbose_name = "–∑–∞–∫–∞–∑"
        verbose_name_plural = "–ó–∞–∫–∞–∑—ã"


class OrderPhoto(models.Model):
    order = models.ForeignKey(Order, on_delete=models.CASCADE)
    photo = models.ImageField("–§–æ—Ç–æ", upload_to=get_upload_path)

    def __str__(self):
        return f"–§–æ—Ç–æ –∑–∞–∫–∞–∑–∞ ‚Ññ{self.order.order_id}"

    class Meta:
        verbose_name = "—Ñ–æ—Ç–æ –∑–∞–∫–∞–∑–∞"
        verbose_name_plural = "–§–æ—Ç–æ –∑–∞–∫–∞–∑–æ–≤"
